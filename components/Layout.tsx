import Head from "next/head";
import { useRouter } from "next/router";
import { ReactNode, useContext, useEffect, useState } from "react";
import styled from "styled-components";
import Navbar from "./Navbar";
import Footer from "./Footer";
import CoverPicAdjustModalContext, {
  CoverPicAdjustModalContextType,
} from "context/CoverPicAdjustModalContext";
import imgLogo from "../public/logo/6.png";

type LayoutProps = {
  children: ReactNode;
};

const Container = styled.div`
  width: 100%;
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: start;

  main {
    width: 100%;
    height: 100%;
    overflow-x: hidden;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: start;

    @media (max-width: 768px) {
      height: auto;
      justify-content: start;
      padding-top: 20px;
    }
  }
`;

const LoaderContainer = styled.div`
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.8);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  z-index: 9999;

  img {
    width: 60%;
    margin-top: -5%;
  }
  h1 {
    position: absolute;
    margin-top: 40px;
  }

  @media (max-width: 768px) {
    img {
      width: 150%;
      margin-top: -10%;
    }
    h1 {
      position: absolute;
      font-size: 22px;
      margin-left: 30px;
    }

    .spinner {
      width: 65px;
      height: 65px;
      border-radius: 50%;
      background: radial-gradient(farthest-side, #454545 94%, #0000) top/9px 9px
          no-repeat,
        conic-gradient(#0000 30%, #454545);
      -webkit-mask: radial-gradient(
        farthest-side,
        #0000 calc(100% - 9px),
        #000 0
      );
      animation: spinner-c7wet2 1s infinite linear;
    }

    @keyframes spinner-c7wet2 {
      100% {
        transform: rotate(1turn);
      }
    }
  }
`;

export default function Layout({ children }: LayoutProps) {
  const [path, setPath] = useState("");
  const [loading, setLoading] = useState(true);
  const router = useRouter();

  useEffect(() => {
    setPath(router.pathname);
    const initialLoaderTimeout = 1500;

    setTimeout(() => {
      setLoading(false);
    }, initialLoaderTimeout);
  }, [router]);

  const { open: coverPicAdjustModalIsOpen } = useContext(
    CoverPicAdjustModalContext
  ) as CoverPicAdjustModalContextType;

  return (
    <Container className={path === "/" ? "home" : ""}>
      <Head>
        <title>Meoagent</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/meoagent-favicon.png" />
        <link rel="preload" href="/meoagent-logo.png" as="image" />
        <link rel="preload" href="/sublogo.png" as="image" />
      </Head>

      {loading ? (
        <LoaderContainer>
          {/* <img src={imgLogo.src} alt="logo" />
          <h1>Loading...</h1> */}
          <div className="spinner"></div>
        </LoaderContainer>
      ) : (
        <>
          <Navbar />
          <main
            style={{ overflow: coverPicAdjustModalIsOpen ? "hidden" : "auto" }}
          >
            {children}
          </main>
          <Footer />
        </>
      )}
    </Container>
  );
}


// import Head from "next/head";
// import { useRouter } from "next/router";
// import { ReactNode, useContext, useEffect, useState } from "react";
// import styled from "styled-components";
// import Navbar from "./Navbar";
// import Footer from "./Footer";
// import CoverPicAdjustModalContext, {
//   CoverPicAdjustModalContextType,
// } from "context/CoverPicAdjustModalContext";
// import imgLogo from "../public/logo/6.png";

// type LayoutProps = {
//   children: ReactNode;
// };

// const Container = styled.div`
//   width: 100%;
//   min-height: 100vh; /* Alteração aqui para min-height */
//   display: flex;
//   flex-direction: column;
//   align-items: center;
//   justify-content: start;
// `;

// const LoaderContainer = styled.div`
//   width: 100%;
//   height: 100%;
//   background-color: rgba(255, 255, 255, 0.8);
//   display: flex;
//   flex-direction: column;
//   align-items: center;
//   justify-content: center;
//   z-index: 9999;

//   img {
//     width: 60%;
//     margin-top: -5%;
//   }
//   h1 {
//     position: absolute;
//     margin-top: 40px;
//   }

//   .spinner {
//     width: 65px;
//     height: 65px;
//     border-radius: 50%;
//     background: radial-gradient(farthest-side, #454545 94%, #0000) top/9px 9px
//         no-repeat,
//       conic-gradient(#0000 30%, #454545);
//     -webkit-mask: radial-gradient(
//       farthest-side,
//       #0000 calc(100% - 9px),
//       #000 0
//     );
//     animation: spinner-c7wet2 1s infinite linear;
//   }

//   @keyframes spinner-c7wet2 {
//     100% {
//       transform: rotate(1turn);
//     }
//   }
// `;

// export default function Layout({ children }: LayoutProps) {
//   const [path, setPath] = useState("");
//   const [loading, setLoading] = useState(true);
//   const router = useRouter();

//   useEffect(() => {
//     setPath(router.pathname);
//     const initialLoaderTimeout = 1500;

//     setTimeout(() => {
//       setLoading(false);
//     }, initialLoaderTimeout);
//   }, [router]);

//   const { open: coverPicAdjustModalIsOpen } = useContext(
//     CoverPicAdjustModalContext
//   ) as CoverPicAdjustModalContextType;

//   return (
//     <Container className={path === "/" ? "home" : ""}>
//       <Head>
//         <title>Meoagent</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/meoagent-favicon.png" />
//         <link rel="preload" href="/meoagent-logo.png" as="image" />
//         <link rel="preload" href="/sublogo.png" as="image" />
//       </Head>

//       {loading ? (
//         <LoaderContainer>
//           <div className="spinner"></div>
//         </LoaderContainer>
//       ) : (
//         <>
//           <Navbar />
//           <main
//             style={{ overflow: coverPicAdjustModalIsOpen ? "hidden" : "auto", flex: 1 }} // Adicionando flex: 1 para ocupar o espaço disponível
//           >
//             {children}
//           </main>
//           <Footer />
//         </>
//       )}
//     </Container>
//   );
// }
